/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kasir_kelompok2;

import java.util.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alitz
 */
public class KasirProsesView extends javax.swing.JFrame {
    DefaultTableModel model;
    DefaultListModel modelList;
    private String username;
    private int id_user;
    private boolean login = false;
    private int totalHarga;
    private int kembalian;
    private int cash;


    /**
     * Creates new form KasirProsesView
     */
    public KasirProsesView(String username, boolean login) throws SQLException {
        initComponents();
        this.totalHarga = 0;
        this.kembalian = 0;
        this.cash = 0;
        this.username = username;
        this.id_user = getId();
        this.login = true;
        String[] judul ={
            "id_transaksi",
            "Customer",
            "Nama Barang",
           "Harga Barang",
           "Jumlah Barang"
        };
        model = new DefaultTableModel(judul,0);
        modelList = new DefaultListModel();
        tabelTransaksi.setModel(model);
        tabelDaftar.setModel(model);
        outputTotal.setEditable(false);
        menu.add(panelList);
        menu.setFocusable(false);
        list.setModel(modelList);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        body = new javax.swing.JPanel();
        menuKasir = new javax.swing.JPanel();
        btnTransaksi = new javax.swing.JButton();
        labelMenu = new javax.swing.JLabel();
        labelMerk = new javax.swing.JLabel();
        btnDaftar = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        mainKasir = new javax.swing.JPanel();
        transaksi = new javax.swing.JPanel();
        panelJudulTransaksi = new javax.swing.JPanel();
        judulTransaksi = new javax.swing.JLabel();
        dateChooserToday = new com.toedter.calendar.JDateChooser();
        tanggalHariIni = new javax.swing.JLabel();
        panelBodyTransaksi = new javax.swing.JPanel();
        labelCustomer = new javax.swing.JLabel();
        labelBarang = new javax.swing.JLabel();
        labelHarga = new javax.swing.JLabel();
        labelJumlah = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        inputCustomer = new javax.swing.JTextField();
        labelTotal = new javax.swing.JLabel();
        outputHarga = new javax.swing.JTextField();
        outputTotal = new javax.swing.JTextField();
        spinnerJumlah = new javax.swing.JSpinner();
        btnSelesai = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();
        labelCash = new javax.swing.JLabel();
        inputCash = new javax.swing.JTextField();
        labelKembalian = new javax.swing.JLabel();
        btnStruk = new javax.swing.JButton();
        daftarBarang = new javax.swing.JTextField();
        panelTabel = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        daftarTransaksi = new javax.swing.JPanel();
        judulDaftar = new javax.swing.JLabel();
        panelDaftar = new javax.swing.JScrollPane();
        tabelDaftar = new javax.swing.JTable();
        cari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "yudha", "oming", "dede", "unud", "yoga", "anom", "dewa", "indie", "boby", "bayu" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout panelListLayout = new javax.swing.GroupLayout(panelList);
        panelList.setLayout(panelListLayout);
        panelListLayout.setHorizontalGroup(
            panelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
        );
        panelListLayout.setVerticalGroup(
            panelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuKasir.setBackground(new java.awt.Color(0, 0, 153));

        btnTransaksi.setText("Transaksi");
        btnTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaksiActionPerformed(evt);
            }
        });

        labelMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelMenu.setForeground(new java.awt.Color(255, 255, 255));
        labelMenu.setText("Menu :");

        labelMerk.setBackground(new java.awt.Color(255, 255, 255));
        labelMerk.setFont(new java.awt.Font("Adobe Caslon Pro", 3, 18)); // NOI18N
        labelMerk.setForeground(new java.awt.Color(255, 255, 255));
        labelMerk.setText("<html> \n<p><center>Kasir<br>Sejahtera..</center></p>\n</html>");

        btnDaftar.setText("Daftar");
        btnDaftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaftarActionPerformed(evt);
            }
        });

        btnLogout.setText("logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuKasirLayout = new javax.swing.GroupLayout(menuKasir);
        menuKasir.setLayout(menuKasirLayout);
        menuKasirLayout.setHorizontalGroup(
            menuKasirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuKasirLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(menuKasirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMerk)
                    .addGroup(menuKasirLayout.createSequentialGroup()
                        .addGroup(menuKasirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelMenu)
                            .addComponent(btnTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDaftar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLogout))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menuKasirLayout.setVerticalGroup(
            menuKasirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuKasirLayout.createSequentialGroup()
                .addComponent(labelMerk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(labelMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTransaksi)
                .addGap(18, 18, 18)
                .addComponent(btnDaftar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(104, 104, 104))
        );

        mainKasir.setLayout(new java.awt.CardLayout());

        judulTransaksi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        judulTransaksi.setText("Welcome Kasir, Semangat !!");

        tanggalHariIni.setText("Hari ini :");

        javax.swing.GroupLayout panelJudulTransaksiLayout = new javax.swing.GroupLayout(panelJudulTransaksi);
        panelJudulTransaksi.setLayout(panelJudulTransaksiLayout);
        panelJudulTransaksiLayout.setHorizontalGroup(
            panelJudulTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJudulTransaksiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tanggalHariIni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateChooserToday, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(panelJudulTransaksiLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(judulTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelJudulTransaksiLayout.setVerticalGroup(
            panelJudulTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJudulTransaksiLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(judulTransaksi)
                .addGap(2, 2, 2)
                .addGroup(panelJudulTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tanggalHariIni, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChooserToday, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        labelCustomer.setText("Nama Customerr :");

        labelBarang.setText("Nama Barang :");

        labelHarga.setText("Harga Barang :");

        labelJumlah.setText("Jumlah Barang :");

        btnTambah.setText("tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        inputCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputCustomerKeyReleased(evt);
            }
        });

        labelTotal.setText("Total Harga :");

        outputHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputHargaActionPerformed(evt);
            }
        });

        outputTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputTotalActionPerformed(evt);
            }
        });

        spinnerJumlah.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                spinnerJumlahInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        spinnerJumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                spinnerJumlahKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spinnerJumlahKeyTyped(evt);
            }
        });

        btnSelesai.setText("selesai");
        btnSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelesaiActionPerformed(evt);
            }
        });

        btnBayar.setText("bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });

        labelCash.setText("Cash :");

        labelKembalian.setText("Kembalian : Rp 0,00");

        btnStruk.setText("Struk..");
        btnStruk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStrukActionPerformed(evt);
            }
        });

        daftarBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                daftarBarangKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelBodyTransaksiLayout = new javax.swing.GroupLayout(panelBodyTransaksi);
        panelBodyTransaksi.setLayout(panelBodyTransaksiLayout);
        panelBodyTransaksiLayout.setHorizontalGroup(
            panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                        .addComponent(labelTotal)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                        .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(labelCustomer)
                                .addGap(77, 77, 77)
                                .addComponent(inputCustomer))
                            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(labelBarang)
                                        .addComponent(labelHarga))
                                    .addComponent(labelJumlah)
                                    .addComponent(labelCash))
                                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spinnerJumlah)
                                            .addComponent(outputHarga)
                                            .addComponent(outputTotal)
                                            .addComponent(inputCash)
                                            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                                .addComponent(labelKembalian)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                                .addComponent(btnSelesai)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                                                .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addComponent(daftarBarang))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyTransaksiLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnTambah)))
                        .addGap(31, 31, 31)
                        .addComponent(btnStruk)
                        .addGap(58, 58, 58))))
        );
        panelBodyTransaksiLayout.setVerticalGroup(
            panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyTransaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCustomer)
                    .addComponent(inputCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBarang)
                    .addComponent(daftarBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHarga)
                    .addComponent(outputHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelJumlah)
                    .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotal)
                    .addComponent(outputTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCash))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelKembalian)
                .addGap(19, 19, 19)
                .addGroup(panelBodyTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelesai)
                    .addComponent(btnBayar)
                    .addComponent(btnStruk))
                .addContainerGap())
        );

        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        panelTabel.setViewportView(tabelTransaksi);

        javax.swing.GroupLayout transaksiLayout = new javax.swing.GroupLayout(transaksi);
        transaksi.setLayout(transaksiLayout);
        transaksiLayout.setHorizontalGroup(
            transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transaksiLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(panelTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(transaksiLayout.createSequentialGroup()
                .addComponent(panelJudulTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(transaksiLayout.createSequentialGroup()
                    .addComponent(panelBodyTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        transaksiLayout.setVerticalGroup(
            transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transaksiLayout.createSequentialGroup()
                .addComponent(panelJudulTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                .addComponent(panelTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transaksiLayout.createSequentialGroup()
                    .addContainerGap(80, Short.MAX_VALUE)
                    .addComponent(panelBodyTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(250, Short.MAX_VALUE)))
        );

        mainKasir.add(transaksi, "card5");

        judulDaftar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        judulDaftar.setText("Daftar Transaksi  :");

        tabelDaftar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        panelDaftar.setViewportView(tabelDaftar);

        cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cariKeyReleased(evt);
            }
        });

        jLabel1.setText("Cari :");

        javax.swing.GroupLayout daftarTransaksiLayout = new javax.swing.GroupLayout(daftarTransaksi);
        daftarTransaksi.setLayout(daftarTransaksiLayout);
        daftarTransaksiLayout.setHorizontalGroup(
            daftarTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(daftarTransaksiLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(daftarTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(daftarTransaksiLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelDaftar, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(judulDaftar, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        daftarTransaksiLayout.setVerticalGroup(
            daftarTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(daftarTransaksiLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(judulDaftar)
                .addGap(20, 20, 20)
                .addGroup(daftarTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDaftar, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        mainKasir.add(daftarTransaksi, "card3");

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addComponent(menuKasir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainKasir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuKasir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void outputHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputHargaActionPerformed

    private void outputTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputTotalActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        new mainView().setVisible(true);
        this.login = false;
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    @SuppressWarnings("empty-statement")
    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        
        String namaCustomer = inputCustomer.getText();
        String namaBarang = daftarBarang.getText();
        String hargaBarang = outputHarga.getText();
        int jumlahBarang = (int) spinnerJumlah.getValue();
        Date date = dateChooserToday.getDate();
        
        if(namaCustomer.equals("")){
            
            JOptionPane.showMessageDialog(null, "isi nama customer");
            
        }else if(namaBarang.equals("")){
            
             JOptionPane.showMessageDialog(null, "isi nama barang");
            
        }else if(hargaBarang.equals("")){
            
            JOptionPane.showMessageDialog(null, "isi harga barang");
            
        }else if(jumlahBarang <= 0 || jumlahBarang > getSpinnerMaxValue()){
            
            JOptionPane.showMessageDialog(null, "masukan jumlah barang/stok habis");
            
        }else if(date == null){
            
            JOptionPane.showMessageDialog(null, "isi tanggal sekarang");
            
        }else{
            java.sql.Date sqldate = new java.sql.Date(date.getTime());
            PreparedStatement ps;
            String query1 = "INSERT INTO `customer`(`nama_customer`) VALUES (?)";
            String query2 = "INSERT INTO `transaksi` (`id_user`, `id_customer`, `id_produk`, `jumlah_barang`, `harga_beli` ,`harga` ,`tanggal_pembelian`) VALUES (?,?,?,?,?,?,?)";
            String query3 = "UPDATE produk SET stok_produk = stok_produk - ? WHERE id_produk = ?";
            String query4 = "UPDATE transaksi SET jumlah_barang = ? WHERE id_transaksi = ?";
            String query5 = "SELECT MAX(id_transaksi) FROM transaksi";
            String query6 = "SELECT id_transaksi FROM transaksi WHERE "
                    + "id_user = ? AND "
                    + "id_customer = ? AND "
                    + "id_produk = ? AND "
                    + "jumlah_barang = ? AND "
                    + "tanggal_pembelian = ?";

            try {
                Statement stm = MyConnection.getConnection().createStatement();           
                //cek customer            
                ResultSet rs;
                rs = stm.executeQuery("SELECT id_customer FROM customer WHERE nama_customer = '" + namaCustomer +"'");
                if(rs.next() == false){
                    ps = MyConnection.getConnection().prepareStatement(query1);
                    ps.setString(1, namaCustomer);
                    ps.executeUpdate();

                    rs = stm.executeQuery("SELECT id_customer FROM customer WHERE nama_customer = '" + namaCustomer +"'");
                    rs.next();
                }
                //ambil id customer
                int id_customer = Integer.parseInt(rs.getString("id_customer"));

                //ambil id produk
                rs = stm.executeQuery("SELECT id_produk, harga_beli FROM produk WHERE nama_produk = '" + namaBarang +"'");
                rs.next();
                int id_produk = rs.getInt("id_produk");
                int hargaBeli = rs.getInt("harga_beli");

                 //kurangi stok produk
                ps = MyConnection.getConnection().prepareStatement(query3);
                ps.setInt(1, jumlahBarang);
                ps.setInt(2, id_produk);
                ps.executeUpdate();
                
                //update belnjaan jika barang sama
                int indeksSama = cekBarang(namaBarang);
                int id_transaksi = 0;
                if( indeksSama  != -1){

                    //update jumlah belanjaan
                    int jumlahBarangSekarang = jumlahBarang + Integer.parseInt((String) model.getValueAt(indeksSama, 4));
                    model.setValueAt(Integer.toString(jumlahBarangSekarang), indeksSama, 4);

                    id_transaksi = Integer.parseInt((String) model.getValueAt(indeksSama, 0));

                    ps = MyConnection.getConnection().prepareStatement(query4);
                    ps.setInt(1, jumlahBarangSekarang);
                    ps.setInt(2, id_transaksi);
                    ps.executeUpdate();

                }else{
                    //insert data ke tabel transaksi
                    System.out.print("masuk");
                    ps = MyConnection.getConnection().prepareStatement(query2);
                    ps.setInt(1, this.id_user);
                    ps.setInt(2, id_customer);
                    ps.setInt(3, id_produk);
                    ps.setInt(4, jumlahBarang);
                    ps.setInt(5, hargaBeli);
                    ps.setInt(6, Integer.parseInt(hargaBarang));
                    ps.setDate(7, sqldate);
                    ps.executeUpdate();

                    //ambil id transaksi               
                    rs = stm.executeQuery(query5);
                    rs.next();
                    id_transaksi = rs.getInt("MAX(id_transaksi)");

                    //tampilkan ke tabel
                    String data[] = {String.valueOf(id_transaksi), namaCustomer, namaBarang, hargaBarang, String.valueOf(jumlahBarang)};
                    model.addRow(data);
                    this.totalHarga += jumlahBarang*Integer.parseInt(hargaBarang);
                    outputTotal.setText(Integer.toString(this.totalHarga));
                }


                spinnerJumlah.setValue(0);
                setSpinner();
            } catch (SQLException ex) {
                Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
      
        

        
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelesaiActionPerformed
        // TODO add your handling code here:
        int row = tabelTransaksi.getRowCount();
        for(int a=0; a<row; a++){
            model.removeRow(0);
        }
        inputCustomer.setText("");
        daftarBarang.setText("");
        outputHarga.setText("");
        spinnerJumlah.setValue(0);
        outputTotal.setText("");
        inputCash.setText("");
        labelKembalian.setText("Kembalian : Rp 0,00");
        this.totalHarga = 0;
        this.kembalian = 0;
    }//GEN-LAST:event_btnSelesaiActionPerformed

    private void btnDaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaftarActionPerformed
        // TODO add your handling code here:
        
        mainKasir.removeAll();
        mainKasir.repaint();
        mainKasir.revalidate();
        
        mainKasir.add(daftarTransaksi);
        mainKasir.repaint();
        mainKasir.revalidate();
        
        try {
            tampilkanTabel();
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDaftarActionPerformed

    private void btnTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaksiActionPerformed
        // TODO add your handling code here:
        mainKasir.removeAll();
        mainKasir.repaint();
        mainKasir.revalidate();
        
        mainKasir.add(transaksi);
        mainKasir.repaint();
        mainKasir.revalidate();
        clearTable();
    }//GEN-LAST:event_btnTransaksiActionPerformed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        // TODO add your handling code here:
        
        if(!inputCash.getText().equals("")){
            this.cash = Integer.parseInt(inputCash.getText());
            this.kembalian = cash - this.totalHarga;
            labelKembalian.setText("Kembalian : Rp. " + this.kembalian + ",00");
        }
        
        
        
    }//GEN-LAST:event_btnBayarActionPerformed

    private void btnStrukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStrukActionPerformed
   
        if (model.getRowCount() > 0){
            Date date =  dateChooserToday.getDate();
            java.sql.Date tanggal = new java.sql.Date(date.getTime());
            new Struk(model, this.totalHarga, this.kembalian, this.cash,  tanggal).setVisible(true);
        }else{
            
            JOptionPane.showMessageDialog(null, "isi data");
        }
        
    }//GEN-LAST:event_btnStrukActionPerformed

    private void spinnerJumlahKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinnerJumlahKeyTyped
    
    }//GEN-LAST:event_spinnerJumlahKeyTyped

    private void spinnerJumlahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinnerJumlahKeyPressed

    }//GEN-LAST:event_spinnerJumlahKeyPressed

    private void inputCustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCustomerKeyReleased

                
    }//GEN-LAST:event_inputCustomerKeyReleased

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        // TODO add your handling code here:
        String item = list.getSelectedValue();
        
        daftarBarang.setText(item);
        menu.setVisible(false);
        
        
        try {
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs = stm.executeQuery("SELECT harga_produk FROM produk WHERE nama_produk = '"+item+"'");
            
            if(rs.next()){
                String harga = rs.getString("harga_produk");
                outputHarga.setText(harga);
                setSpinner();
            }
         
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_listMouseClicked

    private void daftarBarangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daftarBarangKeyReleased
        // TODO add your handling code here:
        menu.show(daftarBarang, 0, daftarBarang.getHeight());
        isiList();
    }//GEN-LAST:event_daftarBarangKeyReleased

    private void spinnerJumlahInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_spinnerJumlahInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_spinnerJumlahInputMethodTextChanged

    private void cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariKeyReleased
        // TODO add your handling code here:
        
        cariDataTransaksi();
        
        
    }//GEN-LAST:event_cariKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KasirProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KasirProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KasirProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KasirProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private boolean login = this.login;
            public void run() {
                if (!login){
                    new mainView().setVisible(true);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel body;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnDaftar;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSelesai;
    private javax.swing.JButton btnStruk;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTransaksi;
    private javax.swing.JTextField cari;
    private javax.swing.JTextField daftarBarang;
    private javax.swing.JPanel daftarTransaksi;
    private com.toedter.calendar.JDateChooser dateChooserToday;
    private javax.swing.JTextField inputCash;
    private javax.swing.JTextField inputCustomer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judulDaftar;
    public javax.swing.JLabel judulTransaksi;
    private javax.swing.JLabel labelBarang;
    private javax.swing.JLabel labelCash;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JLabel labelHarga;
    private javax.swing.JLabel labelJumlah;
    private javax.swing.JLabel labelKembalian;
    private javax.swing.JLabel labelMenu;
    private javax.swing.JLabel labelMerk;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JList<String> list;
    private javax.swing.JPanel mainKasir;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JPanel menuKasir;
    private javax.swing.JTextField outputHarga;
    private javax.swing.JTextField outputTotal;
    private javax.swing.JPanel panelBodyTransaksi;
    private javax.swing.JScrollPane panelDaftar;
    private javax.swing.JPanel panelJudulTransaksi;
    private javax.swing.JPanel panelList;
    private javax.swing.JScrollPane panelTabel;
    private javax.swing.JSpinner spinnerJumlah;
    private javax.swing.JTable tabelDaftar;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JLabel tanggalHariIni;
    private javax.swing.JPanel transaksi;
    // End of variables declaration//GEN-END:variables

public void tampilkanTabel() throws SQLException{
    
    clearTable();
    Statement stm = MyConnection.getConnection().createStatement();
    ResultSet rs;
    rs = stm.executeQuery("SELECT  id_transaksi, nama_customer, nama_produk, harga_produk, jumlah_barang\n" +
                            "FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
                            "ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
                            "WHERE u.id_user = "+ this.id_user +"\n"+
                            "ORDER BY t.id_transaksi DESC");
    
    while(rs.next()){
        String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
        model.addRow(data);
    }

}

//private void isiCombo(){
//    String query = "SELECT nama_produk FROM produk WHERE stok_produk > 0";
//    try{
//        Statement stm = MyConnection.getConnection().createStatement();
//        ResultSet rs;
//        rs = stm.executeQuery(query);
//        
//        while(rs.next()){
//            String data = rs.getString("nama_produk");
//            comboBoxBarang.addItem(data);
//        }
//        
//    } catch(Exception ex){
//        JOptionPane.showMessageDialog(null, ex);
//    }
//}




private int getId (){
    int id = 0;
 
    PreparedStatement ps;
    ResultSet rs;
        
    String query = "SELECT id_user FROM `user` WHERE `username` =?";
        
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
            ps.setString(1, this.username);     
            rs = ps.executeQuery();
            rs.next();
            id = Integer.parseInt(rs.getString("id_user"));       
        } catch (SQLException ex) {
            Logger.getLogger(mainView.class.getName()).log(Level.SEVERE, null, ex);
        }
    return id;
    
}


public void clearTable(){
    int row = tabelDaftar.getRowCount();
    for(int a=0; a<row; a++){
        model.removeRow(0);
    }
}


private int cekBarang (String namaBarang){
        
    int indeks = -1;
    int jumlahBelanja = model.getRowCount();
    
    for (int i=0; i<jumlahBelanja; i++){
        
        if (namaBarang.equals((String)model.getValueAt(i, 2))){
            
            indeks = i;
            break;
            
        }
        
    }
       
    return indeks;
}


private void setSpinner(){
    //set maksimal stok produk
    SpinnerModel spinner = new SpinnerNumberModel(0, 0, getSpinnerMaxValue(), 1);
    spinnerJumlah.setModel(spinner);
}

private int getSpinnerMaxValue(){
    String namaBarang = daftarBarang.getText();
    int stok = 0;
        
        try {
            // ambil data harga dari combo box yang dipilih
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs;
            rs = stm.executeQuery("SELECT stok_produk FROM produk WHERE nama_produk = '" + namaBarang +"'");
            rs.next();
            stok = rs.getInt("stok_produk");
        
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    return stok;
}

    private void isiList() {
        
        String nama = daftarBarang.getText();
        
        String query = "SELECT nama_produk FROM produk WHERE stok_produk > 0 AND nama_produk LIKE '%"+nama+"%'";
        modelList.removeAllElements();
        try{
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs;
            rs = stm.executeQuery(query);
            
            if(!rs.isBeforeFirst()){
                
                String data = "produk tidak tersedia.";
                modelList.addElement(data);
                list.setEnabled(false);
                
            }else{
                list.setEnabled(true);               
                while(rs.next()){
                    String data = rs.getString("nama_produk");
                    modelList.addElement(data);
                }
            }

        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }

    private void cariDataTransaksi() {
        
        String nama = cari.getText();
        clearTable();
        
        String query = "SELECT  id_transaksi, nama_customer, nama_produk, harga_produk, jumlah_barang\n" +
                            "FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
                            "ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
                            "WHERE u.id_user = "+ this.id_user +" AND ("+
                            "id_transaksi LIKE '%"+nama+"%' OR\n"+
                            "nama_customer LIKE '%"+nama+"%' OR\n"+
                            "nama_produk LIKE '%"+nama+"%' OR\n"+
                            "harga_produk LIKE '%"+nama+"%' OR\n"+
                            "jumlah_barang LIKE '%"+nama+"%'\n"+
                            ")ORDER BY t.id_transaksi DESC";

        try{
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs;
            rs = stm.executeQuery(query);
                          
            while(rs.next()){
                String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
                model.addRow(data);
            }
            

        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }

}