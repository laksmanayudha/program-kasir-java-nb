/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kasir_kelompok2;

import java.awt.print.PrinterException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alitz
 */
public class ManagerProsesView extends javax.swing.JFrame {
    DefaultTableModel model, model2, model3, model4, model5;
    private int id_user;
    private String username;
    private boolean login = false;

    /**
     * Creates new form ManagerProsesView
     */
    public ManagerProsesView(String username, boolean login) throws SQLException {
        initComponents();
        isiAtributTabel();
        isiAtributTabel2();
        tampilkanData();
        isiCombo();
        this.username = username;
        this.id_user = getId(username);
        isiAtributTabel3();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuManager = new javax.swing.JPanel();
        labelMenu = new javax.swing.JLabel();
        labelMerk = new javax.swing.JLabel();
        transaksiManager = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnSuply = new javax.swing.JButton();
        btnLaporan = new javax.swing.JButton();
        mainManager = new javax.swing.JPanel();
        transaksiBarang = new javax.swing.JPanel();
        headerManager = new javax.swing.JPanel();
        judulLabel = new javax.swing.JLabel();
        bodyManager = new javax.swing.JPanel();
        tabelPane = new javax.swing.JScrollPane();
        tabelManager = new javax.swing.JTable();
        inputCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        labelCari = new javax.swing.JLabel();
        dateChooserDari = new com.toedter.calendar.JDateChooser();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        labelDariTx = new javax.swing.JLabel();
        clear1 = new javax.swing.JButton();
        labelSampaiTx = new javax.swing.JLabel();
        btnPrintTransaksi = new javax.swing.JButton();
        dateChooserSampai = new com.toedter.calendar.JDateChooser();
        updatePanel = new javax.swing.JPanel();
        judulUpadate = new javax.swing.JLabel();
        updateCustomer = new javax.swing.JLabel();
        updateBarang = new javax.swing.JLabel();
        updateHarga = new javax.swing.JLabel();
        updateJumlah = new javax.swing.JLabel();
        comboBoxBarang = new javax.swing.JComboBox<>();
        teksCustomer = new javax.swing.JTextField();
        teksHarga = new javax.swing.JTextField();
        spinnerJumlah = new javax.swing.JSpinner();
        updateTanggal = new javax.swing.JLabel();
        dateChooserUpdate = new com.toedter.calendar.JDateChooser();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        outputHargaBeli = new javax.swing.JTextField();
        labelHargaBeli = new javax.swing.JLabel();
        suplyBarang = new javax.swing.JPanel();
        headerSuply = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bodySuply = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelSuply = new javax.swing.JTable();
        tanggalDari = new com.toedter.calendar.JDateChooser();
        tanggalSampai = new com.toedter.calendar.JDateChooser();
        labelDari = new javax.swing.JLabel();
        labelSampai = new javax.swing.JLabel();
        btnCek = new javax.swing.JButton();
        teksCariSuply = new javax.swing.JTextField();
        labelCariSuply = new javax.swing.JLabel();
        clear2 = new javax.swing.JButton();
        btnPrintSuply = new javax.swing.JButton();
        edit2 = new javax.swing.JButton();
        delete2 = new javax.swing.JButton();
        laporan = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPemasukan = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelPengeluaran = new javax.swing.JTable();
        judulLaporan = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        btnOk = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        remove = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelLaba = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        ubahSuply = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboBarang = new javax.swing.JComboBox<>();
        ubahStokMasuk = new javax.swing.JTextField();
        ubahHargaBeli = new javax.swing.JTextField();
        ubahHargaJual = new javax.swing.JTextField();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        simpan2 = new javax.swing.JButton();
        batal2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuManager.setBackground(new java.awt.Color(0, 0, 153));

        labelMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelMenu.setForeground(new java.awt.Color(255, 255, 255));
        labelMenu.setText("Menu :");

        labelMerk.setBackground(new java.awt.Color(255, 255, 255));
        labelMerk.setFont(new java.awt.Font("Adobe Caslon Pro", 3, 18)); // NOI18N
        labelMerk.setForeground(new java.awt.Color(255, 255, 255));
        labelMerk.setText("<html> \n<p><center>Kasir<br>Sejahtera..</center></p>\n</html>");

        transaksiManager.setText("Transaksi");
        transaksiManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transaksiManagerActionPerformed(evt);
            }
        });

        btnLogout.setText("logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnSuply.setText("Suply");
        btnSuply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuplyActionPerformed(evt);
            }
        });

        btnLaporan.setText("laporan");
        btnLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuManagerLayout = new javax.swing.GroupLayout(menuManager);
        menuManager.setLayout(menuManagerLayout);
        menuManagerLayout.setHorizontalGroup(
            menuManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuManagerLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(menuManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMerk, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addGroup(menuManagerLayout.createSequentialGroup()
                        .addGroup(menuManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelMenu)
                            .addComponent(btnLogout)
                            .addComponent(transaksiManager, javax.swing.GroupLayout.PREFERRED_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(btnSuply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLaporan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menuManagerLayout.setVerticalGroup(
            menuManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuManagerLayout.createSequentialGroup()
                .addComponent(labelMerk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(labelMenu)
                .addGap(18, 18, 18)
                .addComponent(transaksiManager)
                .addGap(18, 18, 18)
                .addComponent(btnSuply)
                .addGap(18, 18, 18)
                .addComponent(btnLaporan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(104, 104, 104))
        );

        mainManager.setLayout(new java.awt.CardLayout());

        judulLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        judulLabel.setText("Welcome Boss Manager, Semangat !!");

        javax.swing.GroupLayout headerManagerLayout = new javax.swing.GroupLayout(headerManager);
        headerManager.setLayout(headerManagerLayout);
        headerManagerLayout.setHorizontalGroup(
            headerManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judulLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(544, Short.MAX_VALUE))
        );
        headerManagerLayout.setVerticalGroup(
            headerManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerManagerLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(judulLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelManagerMouseClicked(evt);
            }
        });
        tabelPane.setViewportView(tabelManager);

        btnCari.setText("cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        labelCari.setText("Cari :");

        btnEdit.setBackground(new java.awt.Color(102, 255, 255));
        btnEdit.setText("edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 51));
        btnDelete.setText("delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelDariTx.setText("Dari :");

        clear1.setText("Clear");
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        labelSampaiTx.setText("Sampai :");

        btnPrintTransaksi.setText("Print..");
        btnPrintTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyManagerLayout = new javax.swing.GroupLayout(bodyManager);
        bodyManager.setLayout(bodyManagerLayout);
        bodyManagerLayout.setHorizontalGroup(
            bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bodyManagerLayout.createSequentialGroup()
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDariTx)
                            .addComponent(labelSampaiTx))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserSampai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserDari, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyManagerLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(labelCari)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inputCari, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyManagerLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrintTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addComponent(tabelPane, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyManagerLayout.setVerticalGroup(
            bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyManagerLayout.createSequentialGroup()
                .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyManagerLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelDariTx)
                            .addComponent(dateChooserDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyManagerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCari)
                            .addComponent(labelCari))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete)
                        .addComponent(clear1)
                        .addComponent(btnPrintTransaksi))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyManagerLayout.createSequentialGroup()
                        .addGroup(bodyManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSampaiTx))
                        .addGap(20, 20, 20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabelPane, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
        );

        javax.swing.GroupLayout transaksiBarangLayout = new javax.swing.GroupLayout(transaksiBarang);
        transaksiBarang.setLayout(transaksiBarangLayout);
        transaksiBarangLayout.setHorizontalGroup(
            transaksiBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transaksiBarangLayout.createSequentialGroup()
                .addComponent(headerManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(bodyManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        transaksiBarangLayout.setVerticalGroup(
            transaksiBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transaksiBarangLayout.createSequentialGroup()
                .addComponent(headerManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bodyManager, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainManager.add(transaksiBarang, "card2");

        judulUpadate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        judulUpadate.setText("UBAH DATA TRANSAKSI :");

        updateCustomer.setText("Nama Customer :");

        updateBarang.setText("Nama Barang :");

        updateHarga.setText("Harga Barang :");

        updateJumlah.setText("Jumlah Barang :");

        comboBoxBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBarangActionPerformed(evt);
            }
        });

        teksHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teksHargaActionPerformed(evt);
            }
        });

        updateTanggal.setText("Tanggal :");

        btnSimpan.setText("simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnBatal.setText("batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        labelHargaBeli.setText("Harga Beli :");

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(teksHarga)
                    .addComponent(outputHargaBeli)
                    .addComponent(spinnerJumlah)
                    .addComponent(dateChooserUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addComponent(btnBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                        .addComponent(btnSimpan))
                    .addComponent(comboBoxBarang, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teksCustomer, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(316, 316, 316))
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateJumlah)
                            .addComponent(updateTanggal)
                            .addComponent(labelHargaBeli)
                            .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(updateBarang)
                                .addComponent(updateHarga))
                            .addGroup(updatePanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(updateCustomer))))
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(judulUpadate)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(judulUpadate)
                .addGap(118, 118, 118)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teksCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateCustomer))
                .addGap(30, 30, 30)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBarang))
                .addGap(30, 30, 30)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teksHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateHarga))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputHargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHargaBeli))
                .addGap(27, 27, 27)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateChooserUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateTanggal))
                        .addGap(35, 35, 35)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnBatal)))
                    .addComponent(updateJumlah))
                .addContainerGap(329, Short.MAX_VALUE))
        );

        mainManager.add(updatePanel, "card3");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Daftar Suply Barang:");

        javax.swing.GroupLayout headerSuplyLayout = new javax.swing.GroupLayout(headerSuply);
        headerSuply.setLayout(headerSuplyLayout);
        headerSuplyLayout.setHorizontalGroup(
            headerSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerSuplyLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(763, Short.MAX_VALUE))
        );
        headerSuplyLayout.setVerticalGroup(
            headerSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerSuplyLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        tabelSuply.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelSuply);

        labelDari.setText("Dari :");

        labelSampai.setText("Sampai :");

        btnCek.setText("cek");
        btnCek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekActionPerformed(evt);
            }
        });

        teksCariSuply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teksCariSuplyActionPerformed(evt);
            }
        });

        labelCariSuply.setText("ket.");

        clear2.setText("Clear");
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });

        btnPrintSuply.setText("Print..");
        btnPrintSuply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintSuplyActionPerformed(evt);
            }
        });

        edit2.setBackground(new java.awt.Color(102, 255, 255));
        edit2.setText("edit");
        edit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit2ActionPerformed(evt);
            }
        });

        delete2.setBackground(new java.awt.Color(255, 51, 0));
        delete2.setText("delete");
        delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodySuplyLayout = new javax.swing.GroupLayout(bodySuply);
        bodySuply.setLayout(bodySuplyLayout);
        bodySuplyLayout.setHorizontalGroup(
            bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodySuplyLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bodySuplyLayout.createSequentialGroup()
                        .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDari)
                            .addComponent(labelCariSuply))
                        .addGap(33, 33, 33)
                        .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tanggalDari, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teksCariSuply, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodySuplyLayout.createSequentialGroup()
                                .addComponent(btnCek)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrintSuply)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(edit2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delete2))
                            .addGroup(bodySuplyLayout.createSequentialGroup()
                                .addComponent(labelSampai)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tanggalSampai, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        bodySuplyLayout.setVerticalGroup(
            bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodySuplyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelDari)
                        .addComponent(tanggalDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bodySuplyLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tanggalSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSampai))))
                .addGap(18, 18, 18)
                .addGroup(bodySuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCek)
                    .addComponent(teksCariSuply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCariSuply)
                    .addComponent(clear2)
                    .addComponent(btnPrintSuply)
                    .addComponent(edit2)
                    .addComponent(delete2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout suplyBarangLayout = new javax.swing.GroupLayout(suplyBarang);
        suplyBarang.setLayout(suplyBarangLayout);
        suplyBarangLayout.setHorizontalGroup(
            suplyBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerSuply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodySuply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        suplyBarangLayout.setVerticalGroup(
            suplyBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suplyBarangLayout.createSequentialGroup()
                .addComponent(headerSuply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodySuply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainManager.add(suplyBarang, "card4");

        tabelPemasukan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelPemasukan);

        tabelPengeluaran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelPengeluaran);

        judulLaporan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        judulLaporan.setText("LAPORAN PEMASUKAN - PENGELUARAN");

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jLabel3.setText("Dari :");

        jLabel4.setText("Sampai :");

        jLabel5.setText("Pemasukan :");

        jLabel6.setText("Pengeluaran :");

        remove.setBackground(new java.awt.Color(255, 51, 0));
        remove.setText("-");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(51, 255, 102));
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        tabelLaba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tabelLaba);

        jButton1.setText("refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout laporanLayout = new javax.swing.GroupLayout(laporan);
        laporan.setLayout(laporanLayout);
        laporanLayout.setHorizontalGroup(
            laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laporanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(judulLaporan)
                .addGap(290, 290, 290))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laporanLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laporanLayout.createSequentialGroup()
                        .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(laporanLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(laporanLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(laporanLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnOk))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                        .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(laporanLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(201, 201, 201)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(remove))
                            .addGroup(laporanLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(36, 36, 36))
        );
        laporanLayout.setVerticalGroup(
            laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laporanLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(judulLaporan)
                .addGap(37, 37, 37)
                .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(laporanLayout.createSequentialGroup()
                        .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(laporanLayout.createSequentialGroup()
                                .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(laporanLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(24, 24, 24)
                                        .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnOk)
                                            .addComponent(jLabel4)))
                                    .addGroup(laporanLayout.createSequentialGroup()
                                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laporanLayout.createSequentialGroup()
                                .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(add)
                                        .addComponent(remove)
                                        .addComponent(jButton1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(laporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        mainManager.add(laporan, "card5");

        jLabel2.setText("Barang :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("UBAH DATA SUPLY :");

        jLabel8.setText("Stok Masuk");

        jLabel9.setText("Harga Beli");

        jLabel10.setText("Harga Jual");

        jLabel11.setText("Tanggal Masuk");

        jLabel12.setText("Tanggal Kadaluarsa");

        comboBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBarangActionPerformed(evt);
            }
        });

        ubahHargaBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahHargaBeliActionPerformed(evt);
            }
        });

        simpan2.setText("simpan");
        simpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan2ActionPerformed(evt);
            }
        });

        batal2.setText("batal");
        batal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ubahSuplyLayout = new javax.swing.GroupLayout(ubahSuply);
        ubahSuply.setLayout(ubahSuplyLayout);
        ubahSuplyLayout.setHorizontalGroup(
            ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ubahSuplyLayout.createSequentialGroup()
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ubahSuplyLayout.createSequentialGroup()
                        .addGap(420, 420, 420)
                        .addComponent(jLabel7)
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ubahSuplyLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel2))
                        .addGap(50, 50, 50)
                        .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ubahHargaJual, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ubahSuplyLayout.createSequentialGroup()
                                .addComponent(batal2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(simpan2))
                            .addComponent(ubahHargaBeli, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ubahStokMasuk, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(261, 261, 261))
        );
        ubahSuplyLayout.setVerticalGroup(
            ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ubahSuplyLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel7)
                .addGap(45, 45, 45)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(43, 43, 43)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubahStokMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(47, 47, 47)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubahHargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(43, 43, 43)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubahHargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(42, 42, 42)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(39, 39, 39)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(53, 53, 53)
                .addGroup(ubahSuplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpan2)
                    .addComponent(batal2))
                .addContainerGap(335, Short.MAX_VALUE))
        );

        mainManager.add(ubahSuply, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        new mainView().setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void transaksiManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transaksiManagerActionPerformed
        // TODO add your handling code here:
        
        mainManager.removeAll();
        mainManager.repaint();
        mainManager.revalidate();
        
        mainManager.add(transaksiBarang);
        mainManager.repaint();
        mainManager.revalidate();
        try {
            tampilkanData();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_transaksiManagerActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:    
        int i;
        Date date = null;
        
        if(tabelManager.getSelectedRow()>-1){
            // ubah tampilan ke update
            mainManager.removeAll();
            mainManager.repaint();
            mainManager.revalidate();

            mainManager.add(updatePanel);
            mainManager.repaint();
            mainManager.revalidate();
            
            
            //isi form update
            i = tabelManager.getSelectedRow();
            
            try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(i,7));
            } catch (ParseException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }
            teksCustomer.setText((String) model.getValueAt(i, 2));
            comboBoxBarang.addItem((String) model.getValueAt(i, 3));
            comboBoxBarang.setSelectedIndex(comboBoxBarang.getItemCount()-1);
            comboBoxBarang.removeItemAt(comboBoxBarang.getItemCount()-1);
            teksHarga.setText((String) model.getValueAt(i, 5));
            outputHargaBeli.setText((String) model.getValueAt(i, 4));
            spinnerJumlah.setValue(Integer.valueOf((String) model.getValueAt(i, 6)));
            dateChooserUpdate.setDate(date);
            
        }else{
            JOptionPane.showMessageDialog(null, "pilih data transaksi");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void teksHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teksHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teksHargaActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        mainManager.removeAll();
        mainManager.repaint();
        mainManager.revalidate();
        
        mainManager.add(transaksiBarang);
        mainManager.repaint();
        mainManager.revalidate();
        
    }//GEN-LAST:event_btnBatalActionPerformed

    private void tabelManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelManagerMouseClicked
        // TODO add your handling code here:
        
        
    
    }//GEN-LAST:event_tabelManagerMouseClicked

    private void comboBoxBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBarangActionPerformed
        // TODO add your handling code here:
        String namaBarang = (String) comboBoxBarang.getSelectedItem();
        
        try {
            // ambil data harga dari combo box yang dipilih
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs;
            rs = stm.executeQuery("SELECT harga_produk, harga_beli FROM produk WHERE nama_produk = '" + namaBarang +"'");
            rs.next();
            String harga = rs.getString("harga_produk");
            String hargaBeli = rs.getString("harga_beli");
            
            //tampilkan ke teks field harga
            teksHarga.setText(harga);
            outputHargaBeli.setText(hargaBeli);
            
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxBarangActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // ambil selected row pada tabel
        int i = tabelManager.getSelectedRow();
        
        //inisialisasi data yang akan dimasukan ke dalam database
        int id_transaksi = Integer.parseInt((String) model.getValueAt(i, 0));
        String username_user =  (String) model.getValueAt(i, 1);
        String namaCustomer = teksCustomer.getText();
        String namaBarang = (String) comboBoxBarang.getSelectedItem();
        int hargaBarang = Integer.parseInt(teksHarga.getText());
        int hargaBeli = Integer.parseInt(outputHargaBeli.getText());
        int jumlahBarang = (int) spinnerJumlah.getValue();
        Date date = dateChooserUpdate.getDate();
        java.sql.Date sqldate = new java.sql.Date(date.getTime());
        
        //proses update data pada database
        PreparedStatement ps;
        String query1 = "INSERT INTO `customer`(`nama_customer`) VALUES (?)";
        String query2 = "UPDATE transaksi SET \n" +
                        "id_user = ?,\n" +
                        "id_customer = ?,\n" +
                        "id_produk = ?,\n" +
                        "harga_beli = ?,\n" +
                        "harga = ?,\n" +
                        "jumlah_barang = ?,\n" +
                        "tanggal_pembelian = ?\n" +
                        "\n" +
                        "WHERE id_transaksi = ?";
        
        try {
            Statement stm = MyConnection.getConnection().createStatement();           
                        
            ResultSet rs;
            rs = stm.executeQuery("SELECT id_customer FROM customer WHERE nama_customer = '" + namaCustomer +"'");
            if(rs.next() == false){
                ps = MyConnection.getConnection().prepareStatement(query1);
                ps.setString(1, namaCustomer);
                ps.executeUpdate();
                
                rs = stm.executeQuery("SELECT id_customer FROM customer WHERE nama_customer = '" + namaCustomer +"'");
                rs.next();
            }
            
            //ambil id cutomer
            int id_customer = Integer.parseInt(rs.getString("id_customer"));
            
            //ambil id produk
            rs = stm.executeQuery("SELECT id_produk FROM produk WHERE nama_produk = '" + namaBarang +"'");
            rs.next();
            int id_produk = Integer.parseInt(rs.getString("id_produk"));
            
            //ambil id user
            rs = stm.executeQuery("SELECT id_user FROM user WHERE username = '" + username_user +"'");
            rs.next();
            int id_user = Integer.parseInt(rs.getString("id_user"));

            ps = MyConnection.getConnection().prepareStatement(query2);
            ps.setInt(1, id_user);
            ps.setInt(2, id_customer);
            ps.setInt(3, id_produk);
            ps.setInt(4, hargaBeli);
            ps.setInt(5, hargaBarang);
            ps.setInt(6, jumlahBarang);
            ps.setDate(7, sqldate);
            ps.setInt(8, id_transaksi);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "update berhasil");

            // kembali ke manager panel
            mainManager.removeAll();
            mainManager.repaint();
            mainManager.revalidate();

            mainManager.add(transaksiBarang);
            mainManager.repaint();
            mainManager.revalidate();
            
            //reset tabel
            tampilkanData();
            
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int i;
        if(tabelManager.getSelectedRow()>-1){
            i = tabelManager.getSelectedRow();
            int id_transaksi = Integer.parseInt((String) model.getValueAt(i, 0));
            
            PreparedStatement ps;
            String query = "DELETE FROM `transaksi` WHERE `transaksi`.`id_transaksi` = ?";
            
            try {
                ps = MyConnection.getConnection().prepareStatement(query);
                ps.setInt(1, id_transaksi);
                ps.executeUpdate();
                tampilkanData();
            } catch (SQLException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }        
            
        }else{
            JOptionPane.showMessageDialog(null, "pilih data");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        
        String str = inputCari.getText();
        java.sql.Date dateDari = null;
        java.sql.Date dateSampai = null;
        try{
            Date date = dateChooserDari.getDate();
            dateDari = new java.sql.Date(date.getTime());
            
            date = dateChooserSampai.getDate();
            dateSampai = new java.sql.Date(date.getTime());
            
        }catch (Exception ex){
            
        }
        
        try {
            
            if(!str.equals("") && dateDari != null && dateSampai != null){
                cariTransaksi(str, dateDari, dateSampai);
            }else if(!str.equals("") && dateDari == null && dateSampai ==null){
                cariTransaksi(str);
            }else if(str.equals("") && dateDari != null && dateSampai !=null){
                cariTransaksi(dateDari, dateSampai);
            }else{
                tampilkanData();
                JOptionPane.showMessageDialog(null, "lengkapi kolom pencarian/tanggal");
            }
            
            
        } catch (Exception ex) {
             Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        
     
        
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnSuplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuplyActionPerformed
        // TODO add your handling code here:
        mainManager.removeAll();
        mainManager.repaint();
        mainManager.revalidate();
        
        mainManager.add(suplyBarang);
        mainManager.repaint();
        mainManager.revalidate();
        try {
            tampilkanSuply ();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuplyActionPerformed

    private void teksCariSuplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teksCariSuplyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teksCariSuplyActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
        // TODO add your handling code here:
        tanggalDari.setDate(null);
        tanggalSampai.setDate(null);
        teksCariSuply.setText("");
        try {
            tampilkanSuply();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clear2ActionPerformed

    private void btnCekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekActionPerformed
        // TODO add your handling code here:
        java.sql.Date dateDari = null;
        java.sql.Date dateSampai = null;
        String str = teksCariSuply.getText();
        try{
            Date date = tanggalDari.getDate();
            dateDari = new java.sql.Date(date.getTime());
            
            date = tanggalSampai.getDate();
            dateSampai = new java.sql.Date(date.getTime());

        }catch (Exception ex){
            
        }
        
        try {
            if (dateDari != null && dateSampai != null && !str.equals("")){
                cariSuply(dateDari, dateSampai, str);
            }else if (dateDari == null && dateSampai == null && !str.equals("")){
                cariSuply(str);
            }else if(dateDari != null && dateSampai != null && str.equals("")){
                cariSuply(dateDari, dateSampai);
            }else{
                tampilkanSuply();
                JOptionPane.showMessageDialog(null, "isi kolom pencarian/tanggal");
            }
        } catch (Exception ex) {
             Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_btnCekActionPerformed

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
        dateChooserDari.setDate(null);
        dateChooserSampai.setDate(null);
        inputCari.setText("");
        try {
            tampilkanData();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clear1ActionPerformed

    private void btnPrintTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintTransaksiActionPerformed
        
        MessageFormat header = new MessageFormat("LAPORAN TRANSAKSI\n");
        MessageFormat footer = new MessageFormat("THANK YOU");
        
        try {
            tabelManager.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintTransaksiActionPerformed

    private void btnPrintSuplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintSuplyActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LAPORAN SUPLY\n");
        MessageFormat footer = new MessageFormat("THANK YOU");
        
        try {
            tabelSuply.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintSuplyActionPerformed

    private void btnLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaporanActionPerformed
        // TODO add your handling code here:
        mainManager.removeAll();
        mainManager.repaint();
        mainManager.revalidate();
        
        mainManager.add(laporan);
         mainManager.repaint();
        mainManager.revalidate();
        
        try {
            tampilkanPengeluaran();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnLaporanActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        
        java.sql.Date dateDari = null;
        java.sql.Date dateSampai = null;
        try{
            Date date = jDateChooser1.getDate();
            dateDari = new java.sql.Date(date.getTime());
            
            date = jDateChooser2.getDate();
            dateSampai = new java.sql.Date(date.getTime());
            
        }catch (Exception ex){
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (dateDari != null && dateSampai != null){
            
            try {
                ambilPemasukan(dateDari, dateSampai);
            } catch (SQLException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "isi tanggal terlebih dahulu");
        }
        
        
    }//GEN-LAST:event_btnOkActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        
        Pengeluaran pengeluaran = new Pengeluaran (model4);
        pengeluaran.setVisible(true);
        
    }//GEN-LAST:event_addActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
           
            tampilkanPengeluaran();
            clearTable(tabelLaba, model5);
            
            int indeksTerakhir = model3.getRowCount()-1;
            
            if(indeksTerakhir >= 0){
                int labaKotor = Integer.parseInt ((String) model3.getValueAt(indeksTerakhir, 4)) - Integer.parseInt ((String) model3.getValueAt(indeksTerakhir, 3));
                System.out.print(labaKotor);
                int totalPengeluaran = getTotalPengeluaran();
                int labaBersih = labaKotor - totalPengeluaran;

                String data[] = {Integer.toString(labaBersih), Integer.toString(totalPengeluaran), Integer.toString(labaKotor)};

                model5.addRow(data);
            }
                    
            
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        
        int row = tabelPengeluaran.getSelectedRow();
        
        if(row > -1){
            
            int id_pengeluaran = Integer.parseInt((String) model4.getValueAt(row, 0));
            PreparedStatement ps;
            String query = "DELETE FROM `pengeluaran` WHERE `pengeluaran`.`id_pengeluaran` = ?";
            
            try {
                ps = MyConnection.getConnection().prepareStatement(query);
                ps.setInt(1, id_pengeluaran);
                ps.executeUpdate();
                tampilkanPengeluaran();
                
            } catch (SQLException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }    
            
        }else{
            
            JOptionPane.showMessageDialog(null, "pilih pengeluaran");
            
        }
        
    }//GEN-LAST:event_removeActionPerformed

    private void edit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit2ActionPerformed
        
        int i;
        Date dateMasuk = null;
        Date dateKadaluarsa = null;
        
        if(tabelSuply.getSelectedRow()>-1){
            // ubah tampilan ke update
            mainManager.removeAll();
            mainManager.repaint();
            mainManager.revalidate();

            mainManager.add(ubahSuply);
            mainManager.repaint();
            mainManager.revalidate();
            
            
            //isi form update
            i = tabelSuply.getSelectedRow();
            
            try {
                dateMasuk = new SimpleDateFormat("yyyy-MM-dd").parse((String)model2.getValueAt(i,7));
                dateKadaluarsa = new SimpleDateFormat("yyyy-MM-dd").parse((String)model2.getValueAt(i,5));
            } catch (ParseException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }

            comboBarang.addItem((String) model2.getValueAt(i, 2));
            comboBarang.setSelectedIndex(comboBarang.getItemCount()-1);
            comboBarang.removeItemAt(comboBarang.getItemCount()-1);
            ubahHargaJual.setText((String) model2.getValueAt(i, 4));
            ubahHargaBeli.setText((String) model2.getValueAt(i, 3));
            ubahStokMasuk.setText((String) model2.getValueAt(i, 6));
            jDateChooser4.setDate(dateMasuk);
            jDateChooser3.setDate(dateKadaluarsa);
            
        }else{
            JOptionPane.showMessageDialog(null, "pilih data suply");
        }
        
        
    }//GEN-LAST:event_edit2ActionPerformed

    private void ubahHargaBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahHargaBeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ubahHargaBeliActionPerformed

    private void batal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal2ActionPerformed
        // TODO add your handling code here:
        mainManager.removeAll();
        mainManager.repaint();
        mainManager.revalidate();
        
        mainManager.add(suplyBarang);
         mainManager.repaint();
        mainManager.revalidate();
    }//GEN-LAST:event_batal2ActionPerformed

    private void comboBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBarangActionPerformed
        // TODO add your handling code here:
         String namaBarang = (String) comboBarang.getSelectedItem();
        
        try {
            // ambil data harga dari combo box yang dipilih
            Statement stm = MyConnection.getConnection().createStatement();
            ResultSet rs;
            rs = stm.executeQuery("SELECT harga_produk, harga_beli FROM produk WHERE nama_produk = '" + namaBarang +"'");
            rs.next();
            String harga = rs.getString("harga_produk");
            String hargaBeli = rs.getString("harga_beli");
            
            //tampilkan ke teks field harga
            ubahHargaJual.setText(harga);
            ubahHargaBeli.setText(hargaBeli);
            
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBarangActionPerformed

    private void simpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan2ActionPerformed
        // ambil selected row pada tabel
        int i = tabelSuply.getSelectedRow();
        
        //inisialisasi data yang akan dimasukan ke dalam database
        int id_suply = Integer.parseInt((String) model2.getValueAt(i, 0));
        String namaBarang = (String) comboBarang.getSelectedItem();
        int hargaJual = Integer.parseInt(ubahHargaJual.getText());
        int hargaBeli = Integer.parseInt(ubahHargaBeli.getText());
        int stok = Integer.parseInt(ubahStokMasuk.getText());
        
        Date date = jDateChooser3.getDate();
        java.sql.Date dateMasuk = new java.sql.Date(date.getTime());
        
        date = jDateChooser4.getDate();
        java.sql.Date dateKadaluarsa = new java.sql.Date(date.getTime());
        
        //proses update data pada database
        PreparedStatement ps;

        String query2 = "UPDATE suply SET \n" +
                        "id_produk = ?,\n" +
                        "harga_beli = ?,\n" +
                        "harga_jual = ?,\n" +
                        "stok_masuk = ?,\n" +
                        "tanggal_masuk = ?\n" +
                        "\n" +
                        "WHERE id_suply = ?";
        
        try {
            Statement stm = MyConnection.getConnection().createStatement();           
                        
            ResultSet rs;
            
            
            //ambil id produk
            rs = stm.executeQuery("SELECT id_produk FROM produk WHERE nama_produk = '" + namaBarang +"'");
            rs.next();
            int id_produk = Integer.parseInt(rs.getString("id_produk"));
            

            ps = MyConnection.getConnection().prepareStatement(query2);
            ps.setInt(1, id_produk);
            ps.setInt(2, hargaBeli);
            ps.setInt(3, hargaJual);
            ps.setInt(4, stok);
            ps.setDate(5, dateMasuk);
            ps.setInt(6, id_suply);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "update berhasil");

            // kembali ke suply barang
            mainManager.removeAll();
            mainManager.repaint();
            mainManager.revalidate();

            mainManager.add(suplyBarang);
            mainManager.repaint();
            mainManager.revalidate();
            
            //reset tabel
            tampilkanSuply();
            
        } catch (SQLException ex) {
            Logger.getLogger(KasirProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_simpan2ActionPerformed

    private void delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete2ActionPerformed
        
        int i;
        if(tabelSuply.getSelectedRow()>-1){
            i = tabelSuply.getSelectedRow();
            int id_suply = Integer.parseInt((String) model2.getValueAt(i, 0));
            
            PreparedStatement ps;
            String query = "DELETE FROM `suply` WHERE `suply`.`id_suply` = ?";
            
            try {
                ps = MyConnection.getConnection().prepareStatement(query);
                ps.setInt(1, id_suply);
                ps.executeUpdate();
                tampilkanSuply();
            } catch (SQLException ex) {
                Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
            }        
            
        }else{
            JOptionPane.showMessageDialog(null, "pilih data");
        }
        
        
    }//GEN-LAST:event_delete2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerProsesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private boolean login = this.login;
            public void run() {
//                String username = "oming";
//                try {
//                    ManagerProsesView mp;
//                    mp = new ManagerProsesView(username);
//                    mp.setVisible(true);
//                    mp.judulLabel.setText("Welcome Boss " + username + ", Semangat !!!");
//                } catch (SQLException ex) {
//                    Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
//                }
                   if (!login){
                    new mainView().setVisible(true);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton batal2;
    private javax.swing.JPanel bodyManager;
    private javax.swing.JPanel bodySuply;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCek;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLaporan;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPrintSuply;
    private javax.swing.JButton btnPrintTransaksi;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnSuply;
    private javax.swing.JButton clear1;
    private javax.swing.JButton clear2;
    private javax.swing.JComboBox<String> comboBarang;
    private javax.swing.JComboBox<String> comboBoxBarang;
    private com.toedter.calendar.JDateChooser dateChooserDari;
    private com.toedter.calendar.JDateChooser dateChooserSampai;
    private com.toedter.calendar.JDateChooser dateChooserUpdate;
    private javax.swing.JButton delete2;
    private javax.swing.JButton edit2;
    private javax.swing.JPanel headerManager;
    private javax.swing.JPanel headerSuply;
    private javax.swing.JTextField inputCari;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JLabel judulLabel;
    private javax.swing.JLabel judulLaporan;
    private javax.swing.JLabel judulUpadate;
    private javax.swing.JLabel labelCari;
    private javax.swing.JLabel labelCariSuply;
    private javax.swing.JLabel labelDari;
    private javax.swing.JLabel labelDariTx;
    private javax.swing.JLabel labelHargaBeli;
    private javax.swing.JLabel labelMenu;
    private javax.swing.JLabel labelMerk;
    private javax.swing.JLabel labelSampai;
    private javax.swing.JLabel labelSampaiTx;
    private javax.swing.JPanel laporan;
    private javax.swing.JPanel mainManager;
    private javax.swing.JPanel menuManager;
    private javax.swing.JTextField outputHargaBeli;
    private javax.swing.JButton remove;
    private javax.swing.JButton simpan2;
    private javax.swing.JSpinner spinnerJumlah;
    private javax.swing.JPanel suplyBarang;
    private javax.swing.JTable tabelLaba;
    private javax.swing.JTable tabelManager;
    private javax.swing.JScrollPane tabelPane;
    private javax.swing.JTable tabelPemasukan;
    public javax.swing.JTable tabelPengeluaran;
    private javax.swing.JTable tabelSuply;
    private com.toedter.calendar.JDateChooser tanggalDari;
    private com.toedter.calendar.JDateChooser tanggalSampai;
    private javax.swing.JTextField teksCariSuply;
    private javax.swing.JTextField teksCustomer;
    private javax.swing.JTextField teksHarga;
    private javax.swing.JPanel transaksiBarang;
    private javax.swing.JButton transaksiManager;
    private javax.swing.JTextField ubahHargaBeli;
    private javax.swing.JTextField ubahHargaJual;
    private javax.swing.JTextField ubahStokMasuk;
    private javax.swing.JPanel ubahSuply;
    private javax.swing.JLabel updateBarang;
    private javax.swing.JLabel updateCustomer;
    private javax.swing.JLabel updateHarga;
    private javax.swing.JLabel updateJumlah;
    private javax.swing.JPanel updatePanel;
    private javax.swing.JLabel updateTanggal;
    // End of variables declaration//GEN-END:variables

private void isiAtributTabel() {
         String[] judul = {
             "id_transaksi",
            "Kasir",
             "Customer",
             "Barang",
             "Beli",
             "Harga",
             "Jumlah",
             "Tgl Beli"
         };
          model = new DefaultTableModel(judul,0);
          tabelManager.setModel(model);
    }
    
private void isiAtributTabel2() {
         String[] judul = {
             "id_Suply",
            "petugas",
             "produk",
             "beli",
             "harga",
             "kadaluarsa",
             "stok masuk",
             "tgl masuk"
         };
          model2 = new DefaultTableModel(judul,0);
          tabelSuply.setModel(model2);
    }
    
private void isiAtributTabel3() {
         String[] judul = {
             "id_produk",
             "nama_produk",
             "jumlah",
             "total beli",
             "total jual"
            
         };
          model3 = new DefaultTableModel(judul,0);
          tabelPemasukan.setModel(model3);
          
          String[] judul2 = {
              "id",
             "nama pengeluaran",
             "biaya"          
         };
          model4 = new DefaultTableModel(judul2,0);
          tabelPengeluaran.setModel(model4);
          
          String[] judul3 = {
             "Laba Bersih",
             "Total Pengeluaran",
             "Laba Kotor"          
         };
          model5 = new DefaultTableModel(judul3,0);
          tabelLaba.setModel(model5);
    }
    
public void clearTable(){
        int row = tabelManager.getRowCount();
        for(int a=0; a<row; a++){
            model.removeRow(0);
        }
    }
    
public void clearTable(javax.swing.JTable tabel, DefaultTableModel model){
        int row = tabel.getRowCount();

        for(int a=0; a<row; a++){
            model.removeRow(0);
        }
    }

private void tampilkanData() throws SQLException {
        clearTable();
        Statement stm = MyConnection.getConnection().createStatement();
        ResultSet rs;
        rs = stm.executeQuery("SELECT  id_transaksi, username, nama_customer, nama_produk, t.harga_beli, t.harga, t.jumlah_barang, t.tanggal_pembelian\n" +
"                            FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
"                            ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
"                            ORDER BY t.tanggal_pembelian, t.id_transaksi");

        while(rs.next()){
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
            model.addRow(data);
        }
    }
    
private void isiCombo(){
        
    String query = "SELECT nama_produk FROM produk";
    try{
        Statement stm = MyConnection.getConnection().createStatement();
        ResultSet rs;
        rs = stm.executeQuery(query);
        
        while(rs.next()){
            String data = rs.getString("nama_produk");
            comboBoxBarang.addItem(data);
            comboBarang.addItem(data);
        }
        
    } catch(Exception ex){
        JOptionPane.showMessageDialog(null, ex);
    }
}

private void cariTransaksi(String str, java.sql.Date dateDari, java.sql.Date dateSampai) {
        clearTable();
        ResultSet rs;
        Statement stm;
        String query = "SELECT   t.id_transaksi, u.username, c.nama_customer, p.nama_produk, t.harga_beli, t.harga, t.jumlah_barang, t.tanggal_pembelian\n" +
"                           FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
"                          ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
"                           WHERE t.tanggal_pembelian BETWEEN '" + dateDari +"' AND '"+dateSampai+"' AND(\n" +
"                           id_transaksi LIKE '%"+str+"%' OR\n" +
"                           username LIKE '%"+str+"%' OR\n" +
"                           nama_customer LIKE '%"+str+"%' OR\n" +
"                           nama_produk LIKE '%"+str+"%' OR\n" +
"                           t.harga LIKE '%"+str+"%' OR\n" +
"                           t.harga_beli LIKE '%"+str+"%' OR\n" +
"                           t.jumlah_barang LIKE '%"+str+"%')\n"
                + "ORDER BY t.tanggal_pembelian, c.nama_customer, p.nama_produk";

        try {
            
           stm = MyConnection.getConnection().createStatement();
           rs = stm.executeQuery(query);
            
            while(rs.next()){
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
            model.addRow(data);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
private void cariTransaksi(String str) {
        clearTable();
        ResultSet rs;
        Statement stm;
        String query = "SELECT  t.id_transaksi, u.username, c.nama_customer, p.nama_produk, t.harga_beli, t.harga, t.jumlah_barang, t.tanggal_pembelian\n" +
"                           FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
"                          ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
"                           WHERE \n" +
"                           id_transaksi LIKE '%"+str+"%' OR\n" +
"                           username LIKE '%"+str+"%' OR\n" +
"                           nama_customer LIKE '%"+str+"%' OR\n" +
"                           nama_produk LIKE '%"+str+"%' OR\n" +
"                           t.harga LIKE '%"+str+"%' OR\n" +
"                           t.harga_beli LIKE '%"+str+"%' OR\n" +
"                           t.jumlah_barang LIKE '%"+str+"%' ORDER BY t.tanggal_pembelian, c.nama_customer, p.nama_produk";                      
            
        try {
            
           stm = MyConnection.getConnection().createStatement();
           rs = stm.executeQuery(query);
            
            while(rs.next()){
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
            model.addRow(data);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
private void cariTransaksi(java.sql.Date dateDari, java.sql.Date dateSampai) {
        
        clearTable();
        ResultSet rs;
        Statement stm;
        String query = "SELECT  t.id_transaksi, u.username, c.nama_customer, p.nama_produk, t.harga_beli, t.harga, t.jumlah_barang, t.tanggal_pembelian\n" +
"                          FROM user u INNER JOIN customer c  INNER JOIN transaksi t INNER JOIN produk p\n" +
"                        ON c.id_customer = t.id_customer AND t.id_produk = p.id_produk AND u.id_user = t.id_user\n" +
"                        WHERE \n" +
"                           t.tanggal_pembelian BETWEEN '" + dateDari + "' AND '"+dateSampai+"' ORDER BY t.tanggal_pembelian, c.nama_customer, p.nama_produk";
            
        try {
            
           stm = MyConnection.getConnection().createStatement();
           rs = stm.executeQuery(query);
            
            while(rs.next()){
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
            model.addRow(data);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManagerProsesView.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }

private int getId(String username) throws SQLException {
        
        Statement stm = MyConnection.getConnection().createStatement();
        ResultSet rs;
        rs = stm.executeQuery("SELECT id_user FROM user WHERE username = '" + username + "'");
        rs.next();
        int id = rs.getInt("id_user");
        
        return id;
    }
    
    private void tampilkanSuply () throws SQLException{
        
       clearTable(tabelSuply, model2);
       Statement stm = MyConnection.getConnection().createStatement();
       String query = "SELECT s.id_suply, u.username, p.nama_produk, s.harga_beli, s.harga_jual, p.kadaluarsa, s.stok_masuk, s.tanggal_masuk\n" +
                        "FROM suply s INNER JOIN  produk p INNER JOIN user u\n" +
                        "ON s.id_produk = p.id_produk AND s.id_petugas = u.id_user ORDER BY s.id_suply";
       
       ResultSet rs = stm.executeQuery(query);
       while(rs.next()) {
           String data[]= {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
           model2.addRow(data);
       }
        
    }
    
private void cariSuply (String str) throws SQLException{
       clearTable(tabelSuply, model2);
       Statement stm = MyConnection.getConnection().createStatement();
       String query = "SELECT s.id_suply, u.username, p.nama_produk, s.harga_beli, s.harga_jual, p.kadaluarsa, s.stok_masuk, s.tanggal_masuk\n" +
                        "FROM suply s INNER JOIN  produk p INNER JOIN user u\n" +
                        "ON s.id_produk = p.id_produk AND s.id_petugas = u.id_user\n" +
                        "WHERE \n" +
                        "s.id_suply LIKE '%"+str+"%' OR\n" +
                        "u.username LIKE '%"+str+"%' OR\n" +
                        "p.nama_produk LIKE '%"+str+"%' OR\n" +
                        "s.harga_jual LIKE '%"+str+"%' OR\n" +
                        "s.harga_beli LIKE '%"+str+"%' OR\n" +
                        "p.kadaluarsa LIKE '%"+str+"%' OR\n" +
                        "s.stok_masuk LIKE '%"+str+"%' OR\n" +
                        "s.tanggal_masuk LIKE '%"+str+"%' ORDER BY s.tanggal_masuk";
       
       ResultSet rs = stm.executeQuery(query);
       while(rs.next()) {
           String data[]= {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
           model2.addRow(data);
       }
    }
    
private void cariSuply (java.sql.Date dateDari, java.sql.Date dateSampai, String str) throws SQLException{
       clearTable(tabelSuply, model2);
       Statement stm = MyConnection.getConnection().createStatement();
       String query = "SELECT s.id_suply, u.username, p.nama_produk, s.harga_beli, s.harga_jual, p.kadaluarsa, s.stok_masuk, s.tanggal_masuk\n" +
                        "FROM suply s INNER JOIN  produk p INNER JOIN user u\n" +
                        "ON s.id_produk = p.id_produk AND s.id_petugas = u.id_user\n" +
                        "WHERE (\n" +
                        "s.id_suply LIKE '%"+str+"%' OR\n" +
                        "u.username LIKE '%"+str+"%' OR\n" +
                        "p.nama_produk LIKE '%"+str+"%' OR\n" +
                        "s.harga_jual LIKE '%"+str+"%' OR\n" +
                        "s.harga_beli LIKE '%"+str+"%' OR\n" +
                        "p.kadaluarsa LIKE '%"+str+"%' OR\n" +
                        "s.stok_masuk LIKE '%"+str+"%' OR\n" +
                        "s.tanggal_masuk LIKE '%"+str+"%')\n" +
                        "AND s.tanggal_masuk BETWEEN '"+dateDari+"' AND '"+dateSampai+"' ORDER BY s.tanggal_masuk";
       
       ResultSet rs = stm.executeQuery(query);
       while(rs.next()) {
           String data[]= {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
           model2.addRow(data);
       }
    }
    
private void cariSuply (java.sql.Date dateDari, java.sql.Date dateSampai) throws SQLException{
       clearTable(tabelSuply, model2);
       Statement stm = MyConnection.getConnection().createStatement();
       String query = "SELECT s.id_suply, u.username, p.nama_produk, s.harga_beli, s.harga_jual, p.kadaluarsa, s.stok_masuk, s.tanggal_masuk\n" +
                        "FROM suply s INNER JOIN  produk p INNER JOIN user u\n" +
                        "ON s.id_produk = p.id_produk AND s.id_petugas = u.id_user\n" +
                        "WHERE\n" +                      
                        "s.tanggal_masuk BETWEEN '"+dateDari+"' AND '"+dateSampai+"' ORDER BY s.tanggal_masuk";
       
       ResultSet rs = stm.executeQuery(query);
       while(rs.next()) {
           String data[]= {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
           model2.addRow(data);
       }
    }


private void ambilPemasukan(java.sql.Date dateDari, java.sql.Date dateSampai) throws SQLException {
        
        clearTable(tabelPemasukan, model3);
        Statement stm = MyConnection.getConnection().createStatement();
        String query = "SELECT t.id_produk, nama_produk, SUM(t.jumlah_barang) as jumlah, SUM(t.harga_beli*t.jumlah_barang) as total_beli, SUM(t.harga*t.jumlah_barang) as  total_jual\n" +
                        "FROM transaksi t INNER JOIN produk p ON t.id_produk = p.id_produk\n" +
                        "WHERE t.tanggal_pembelian BETWEEN '"+dateDari+"' AND '"+dateSampai+"'\n" +
                        "GROUP BY t.id_produk";

        ResultSet rs = stm.executeQuery(query);
        while(rs.next()) {
            String data[]= {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
            model3.addRow(data);
        }
        
        //total beli
        query = "SELECT SUM(total_beli) as totalBeli, SUM(total_jual) as totalJual FROM\n" +
                "(SELECT SUM(t.harga_beli*t.jumlah_barang) as total_beli, SUM(t.harga*t.jumlah_barang) as total_jual\n" +
                "FROM transaksi t INNER JOIN produk p ON t.id_produk = p.id_produk\n" +
                "WHERE t.tanggal_pembelian BETWEEN '"+dateDari+"' AND '"+dateSampai+"'\n" +
                "GROUP BY t.id_produk) as baru";
              
        rs = stm.executeQuery(query);
        rs.next();
        String totalBeli = rs.getString("totalBeli");
        String totalJual = rs.getString("totalJual");
        
        String data[]= {"TOTAL", "", "", totalBeli, totalJual};
        model3.addRow(data);
        
        
    }

    private void tampilkanPengeluaran() throws SQLException {
        
        clearTable(tabelPengeluaran, model4);
        String query = "SELECT * FROM pengeluaran";
        
        Statement stm = MyConnection.getConnection().createStatement();
        ResultSet rs = stm.executeQuery(query);
            
        while(rs.next()){
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3)};
            model4.addRow(data);
        }
    }
    
    private int getTotalPengeluaran() throws SQLException{
        
        String query = "SELECT SUM(biaya) as totalPengeluaran FROM pengeluaran";
        
        Statement stm = MyConnection.getConnection().createStatement();
        ResultSet rs = stm.executeQuery(query);
        rs.next();
        
        int totalPengeluaran = rs.getInt("totalPengeluaran");
        
        return totalPengeluaran;
    }


}
